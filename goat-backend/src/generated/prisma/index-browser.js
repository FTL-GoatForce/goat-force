
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.DealsScalarFieldEnum = {
  id: 'id',
  deal_name: 'deal_name',
  company_name: 'company_name',
  stage: 'stage',
  status: 'status',
  deal_amount: 'deal_amount',
  expected_close_date: 'expected_close_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ParticipantsScalarFieldEnum = {
  id: 'id',
  deal_id: 'deal_id',
  prospect_name: 'prospect_name',
  email: 'email',
  slack_id: 'slack_id',
  role: 'role',
  sentiment: 'sentiment',
  communication_score: 'communication_score',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RisksScalarFieldEnum = {
  id: 'id',
  deal_id: 'deal_id',
  deal_risk_score: 'deal_risk_score',
  churn_risk_score: 'churn_risk_score',
  timeline_risk_score: 'timeline_risk_score',
  budget_risk_score: 'budget_risk_score',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ActivityMetricsScalarFieldEnum = {
  id: 'id',
  deal_id: 'deal_id',
  message_count: 'message_count',
  prospect_response_time: 'prospect_response_time',
  engagement_trend: 'engagement_trend',
  last_communication_source: 'last_communication_source',
  last_communication_summary: 'last_communication_summary',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.AiRecommendationScalarFieldEnum = {
  id: 'id',
  deal_id: 'deal_id',
  next_steps: 'next_steps',
  escalation_triggers: 'escalation_triggers',
  deal_acceleration_tactics: 'deal_acceleration_tactics',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.FollowUpScalarFieldEnum = {
  id: 'id',
  deal_id: 'deal_id',
  communication_type: 'communication_type',
  contact_address: 'contact_address',
  subject: 'subject',
  body: 'body',
  message_id: 'message_id',
  scheduled_at: 'scheduled_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  deal_id: 'deal_id',
  tag: 'tag',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ConversationHistoryScalarFieldEnum = {
  id: 'id',
  deal_id: 'deal_id',
  slack: 'slack',
  email: 'email',
  deal_summary: 'deal_summary',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.DealInsightsScalarFieldEnum = {
  id: 'id',
  deal_id: 'deal_id',
  kpi_insights: 'kpi_insights',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.RiskExplanationScalarFieldEnum = {
  id: 'id',
  risk_id: 'risk_id',
  budget_risk_explanation: 'budget_risk_explanation',
  timeline_risk_explanation: 'timeline_risk_explanation',
  churn_risk_explanation: 'churn_risk_explanation',
  deal_risk_summary: 'deal_risk_summary',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PersonalityScalarFieldEnum = {
  id: 'id',
  participant_id: 'participant_id',
  personality_traits: 'personality_traits',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TimelineScalarFieldEnum = {
  id: 'id',
  activity_metrics_id: 'activity_metrics_id',
  event_date: 'event_date',
  event_type: 'event_type',
  event_details: 'event_details',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  Deals: 'Deals',
  Participants: 'Participants',
  Risks: 'Risks',
  ActivityMetrics: 'ActivityMetrics',
  AiRecommendation: 'AiRecommendation',
  FollowUp: 'FollowUp',
  Tags: 'Tags',
  ConversationHistory: 'ConversationHistory',
  DealInsights: 'DealInsights',
  RiskExplanation: 'RiskExplanation',
  Personality: 'Personality',
  Timeline: 'Timeline'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
